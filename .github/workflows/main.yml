name: CI/CD Pipeline

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker build . -t food_lens:${{ github.sha }}

  mypy:
    name: Run mypy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python and PDM
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install PDM
        run: python -m pip install pdm
      - name: Install dependencies and run mypy
        run: |
          pdm install --group=mypy
          make mypy-ci

  ruff:
    name: Run ruff
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python and PDM
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install PDM
        run: python -m pip install pdm
      - name: Install dependencies and run ruff
        run: |
          pdm install --group=ruff
          make ruff-ci

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python and PDM
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install PDM
        run: python -m pip install pdm
      - name: Install dependencies and run tests
        run: |
          pdm install --group=test-ci
          make test

  deploy:
    name: Deploy to Server
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs:
      - mypy
      - ruff
      - test
    steps:
      - uses: actions/checkout@v2
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker run -rm -d --name food_lens \
              -e API_TOKEN=${{ secrets.API_TOKEN }} \
              -e SECRET_TOKEN=${{ secrets.SECRET_TOKEN }} \
              -e WEBHOOK_URL=${{ secrets.WEBHOOK_URL }} \
              -e WEBHOOK_ENDPOINT=${{ secrets.WEBHOOK_ENDPOINT }} \
              -e UPDATING_METHOD=${{ secrets.UPDATING_METHOD }} \
              food_lens:${{ github.sha }}
