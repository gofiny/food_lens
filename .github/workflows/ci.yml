name: CI/CD Pipeline using GHCR

on:
  push:
  workflow_dispatch:

env:
  IMAGE_NAME: food_lens
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  mypy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python and PDM
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install PDM
        run: python -m pip install pdm
      - name: Install dependencies and run mypy
        run: |
          pdm install --group=mypy
          make mypy-ci

  ruff:
    name: Run ruff
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python and PDM
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install PDM
        run: python -m pip install pdm
      - name: Install dependencies and run ruff
        run: |
          pdm install --group=ruff
          make ruff-ci
  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python and PDM
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install PDM
        run: python -m pip install pdm
      - name: Install dependencies and run tests
        run: |
          pdm install --group=test-ci
          make test

  deploy:
    runs-on: ubuntu-latest
    needs: [mypy, ruff, test]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Log in to GHCR"
            echo ${{ secrets.GHCR_PAT }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
            
            echo "Pulling the Docker image"
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            
            echo "Starting new container"
            docker run --rm -d --name ${{ env.IMAGE_NAME }} \
              -e API_TOKEN=${{ secrets.API_TOKEN }} \
              -e SECRET_TOKEN=${{ secrets.SECRET_TOKEN }} \
              -e WEBHOOK_URL=${{ secrets.WEBHOOK_URL }} \
              -e WEBHOOK_ENDPOINT=${{ secrets.WEBHOOK_ENDPOINT }} \
              -e UPDATING_METHOD=${{ secrets.UPDATING_METHOD }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
